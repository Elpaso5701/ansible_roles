- name: Install PostgreSQL client library
  apt:
    name: libpq-dev
    state: present
    
- name: Install Python module
  pip:
    name: psycopg2
  become: yes

- name: Install PostgreSQL server
  apt:
    name: postgresql
    state: present

- name: Ensure PostgreSQL service is running and enabled
  service:
    name: postgresql
    state: started
    enabled: yes

- name: Create PostgreSQL database
  postgresql_db:
    name: "{{ db_name }}"
    state: present
    login_user: postgres
    login_password: "{{ db_pass }}"
    login_host: "localhost"
    # login_unix_socket: /var/run/postgresql
  become: yes

- name: Connect to database and remove test user privileges from there
  postgresql_user:
    db: "{{ db_name }}"
    name: "{{ db_user }}"
    password: "{{ db_pass }}"
    priv: "*.*:ALL"
    state: present
  become: yes

- name: Install Composer
  shell: >
    curl -sS https://getcomposer.org/installer | php && mv composer.phar /usr/local/bin/composer
  args:
    executable: /bin/bash
    
- name: Rename .env.example to .env
  command: mv /var/www/html/app-for-devops/.env.example /var/www/html/app-for-devops/.env
  become: yes

- name: Update .env file with database credentials
  ansible.builtin.blockinfile:
    path: /var/www/html/app-for-devops/.env
    block: |
      DB_HOST={{ db_host }}
      DB_DATABASE={{ db_name }}
      DB_USERNAME={{ db_user }}
      DB_PASSWORD={{ db_pass }}
    marker: "# {mark} Ansible managed block"
    create: yes

handlers:
  - name: restart postgresql
    ansible.builtin.service:
      name: postgresql
      state: restarted
